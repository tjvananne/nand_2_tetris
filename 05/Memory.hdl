// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    
    // a1 goes to RAM16; b1 goes to SCREEN/Keyboard
    DMux(in=load, sel=address[14], a=a1, b=b1);

    RAM16K(in=in, load=a1, address=address[0..13], out=out1);

    // a2 goes to SCREEN; b2 goes to Keyboard
    DMux(in=b1, sel=address[13], a=a2, b=b2);

    Screen(in=in, load=a2, address=address[0..12], out=out2);

    // Wait what? Keyboard only has an out... hopefully this works?
    Keyboard(out=out3);

    // choose whether our out is SCREEN or Keyboard
    Mux16(a=out2, b=out3, sel=address[13], out=out4);

    // choose whether our out is from RAM16 or from (SCREEN/Keyboard)
    Mux16(a=out1, b=out4, sel=address[14], out=out);

}